---
const navLinks = [
  { text: 'Projects', href: '/projects' },
  { text: 'Blog', href: '/blog' },
  { text: 'Gallery', href: '/gallery/tag/favorite' },
  { text: 'Diary', href: '/diary' },
];

const currentPathname = Astro.url.pathname;

// Helper function to normalize paths (removes trailing slash unless it's the root)
// This helps ensure '/about/' matches '/about'
const normalizePath = (path: string): string => {
  if (path === '/') return '/';
  return path.endsWith('/') ? path.slice(0, -1) : path;
}

const normalizedCurrentPathname = normalizePath(currentPathname);
---

<nav class="md:p-8 p-4 flex md:flex-col place-content-between w-full md:w-80 gap-2 md:gap-8 sticky top-0 left-0 z-10 bg-gray-0 border-b border-gray-1 md:border-none">
    <div class="flex items-center">
        <a href="/" class="w-full md:text-3xl no-underline text-nowrap">
            axseem
        </a>
    </div>
    <div class="border-gray-1 border-b-2"></div>
    <ul class="flex md:flex-col flex-wrap md:gap-3 items-center md:items-baseline gap-2">
		<base target="_self" />
        {navLinks.map(link => {
          const isActive = normalizePath(link.href) === normalizedCurrentPathname || (link.href !== '/' && normalizedCurrentPathname.startsWith(normalizePath(link.href)));
          const linkClasses = [
            "md:text-2xl text-sm w-full h-full no-underline text-nowrap",
          ];
  
          return (
            <li class="flex">
              {isActive ? (
                <a class:list={[...linkClasses, "text-gray-3 md:border-l-4 md:pl-4 md:border-b-0 border-b-2 select-none"]}> 
                  {link.text}
                </a>
              ) : (
                <a href={link.href} class:list={[...linkClasses, "text-gray-2 font-thin hover:font-extralight transition md:hover:translate-x-1"]}>
                  {link.text}
                </a>
              )}
            </li>
          );
        })}
    </ul>
</nav>